Normal30 <- rnorm(100000, mean = 50, sd = 30)
library(zoo)
DensityLower <- density(Normal30$Normal30, from = 40, to = 50)
Normal30 <- data.frame(Normal30)
# Find density for +/- 1 SD
DensityLower <- density(Normal30$Normal30, from = 40, to = 50)
DensityUpper <- density(Normal30$Normal30, from = 50, to = 60)
# Extract density values (y values)
# Helpful information from StackExchange discussion
# http://stackoverflow.com/questions/3494593/shading-a-kernel-density-plot-between-two-points?lq=1
# Load zoo package
library(zoo)
# Convert to data frame
Normal30 <- data.frame(Normal30)
# Find density for +/- 1 SD
DensityLower <- density(Normal30$Normal30, from = 20, to = 50)
DensityUpper <- density(Normal30$Normal30, from = 50, to = 80)
# Extract density values (y values)
YLower <- DensityLower$y
YUpper <- DensityUpper$y
# Extract x values
XLower <- DensityLower$x
XUpper <- DensityUpper$x
# Merge vectors into data frames
Lower <- data.frame(YLower, XLower)
Upper <- data.frame(YUpper, XUpper)
# Add zero variable so that the shaded area goes down to 0
Lower$Zero <- 0
Upper$Zero <- 0
# Upper and Lower colours
LowerC <- "#80B2CD"
UpperC <- "#4F6F80"
# Create density plot
ggplot(Normal30, aes(x = Normal30)) +
geom_density() +
geom_ribbon(data = Lower, aes(x = XLower, ymax = YLower, ymin = Zero), fill = LowerC, alpha = 0.4) +
geom_ribbon(data = Upper, aes(x = XUpper, ymax = YUpper, ymin = Zero), fill = UpperC, alpha = 0.4) +
geom_vline(xintercept = 50, colour = "red", linetype = "longdash") +
annotate("text", x = 25, y = 0.01, label = "-1 SD", colour = LowerC) +
annotate("text", x = 75, y = 0.01, label = "+1 SD", colour = UpperC) +
xmax(0.04) +
xlab("\n Simulated Data with a Standard Deviation of 10") + ylab("Density\n") + ggtitle("Density Plot for Simulated Data\n") +
theme_bw()
# Helpful information from StackExchange discussion
library(ggplot2)
# Helpful information from StackExchange discussion
# http://stackoverflow.com/questions/3494593/shading-a-kernel-density-plot-between-two-points?lq=1
# Load zoo package
library(zoo)
# Convert to data frame
Normal30 <- data.frame(Normal30)
# Find density for +/- 1 SD
DensityLower <- density(Normal30$Normal30, from = 20, to = 50)
DensityUpper <- density(Normal30$Normal30, from = 50, to = 80)
# Extract density values (y values)
YLower <- DensityLower$y
YUpper <- DensityUpper$y
# Extract x values
XLower <- DensityLower$x
XUpper <- DensityUpper$x
# Merge vectors into data frames
Lower <- data.frame(YLower, XLower)
Upper <- data.frame(YUpper, XUpper)
# Add zero variable so that the shaded area goes down to 0
Lower$Zero <- 0
Upper$Zero <- 0
# Upper and Lower colours
LowerC <- "#80B2CD"
UpperC <- "#4F6F80"
# Create density plot
ggplot(Normal30, aes(x = Normal30)) +
geom_density() +
geom_ribbon(data = Lower, aes(x = XLower, ymax = YLower, ymin = Zero), fill = LowerC, alpha = 0.4) +
geom_ribbon(data = Upper, aes(x = XUpper, ymax = YUpper, ymin = Zero), fill = UpperC, alpha = 0.4) +
geom_vline(xintercept = 50, colour = "red", linetype = "longdash") +
annotate("text", x = 25, y = 0.01, label = "-1 SD", colour = LowerC) +
annotate("text", x = 75, y = 0.01, label = "+1 SD", colour = UpperC) +
xmax(0.04) +
xlab("\n Simulated Data with a Standard Deviation of 10") + ylab("Density\n") + ggtitle("Density Plot for Simulated Data\n") +
theme_bw()
summary(Normal30)
ggplot(Normal30, aes(x = Normal30)) +
geom_density() +
geom_ribbon(data = Lower, aes(x = XLower, ymax = YLower, ymin = Zero), fill = LowerC, alpha = 0.4) +
geom_ribbon(data = Upper, aes(x = XUpper, ymax = YUpper, ymin = Zero), fill = UpperC, alpha = 0.4) +
geom_vline(xintercept = 50, colour = "red", linetype = "longdash") +
annotate("text", x = 25, y = 0.015, label = "-1 SD", colour = LowerC) +
annotate("text", x = 75, y = 0.015, label = "+1 SD", colour = UpperC) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_x_continuous(breaks = c(-90, -50, 0, 20, 50, 80, 100, 150, 190), labels = c(-90, -50, 0, 20, 50, 80, 100, 150, 190)) +
xlab("\n Simulated Data") + ylab("Density\n") + ggtitle("Density Plot for Simulated Data with a Standard Deviation of 10\n") +
theme_bw()
# Helpful information from StackExchange discussion
# http://stackoverflow.com/questions/3494593/shading-a-kernel-density-plot-between-two-points?lq=1
# Load zoo package
library(zoo)
# Convert to data frame
Normal30 <- data.frame(Normal30)
# Find density for +/- 1 SD
DensityLower <- density(Normal30$Normal30, from = 20, to = 50)
DensityUpper <- density(Normal30$Normal30, from = 50, to = 80)
# Extract density values (y values)
YLower <- DensityLower$y
YUpper <- DensityUpper$y
# Extract x values
XLower <- DensityLower$x
XUpper <- DensityUpper$x
# Merge vectors into data frames
Lower <- data.frame(YLower, XLower)
Upper <- data.frame(YUpper, XUpper)
# Add zero variable so that the shaded area goes down to 0
Lower$Zero <- 0
Upper$Zero <- 0
# Upper and Lower colours
LowerC <- "#80B2CD"
UpperC <- "#4F6F80"
# Create density plot
ggplot(Normal30, aes(x = Normal30)) +
geom_density() +
geom_ribbon(data = Lower, aes(x = XLower, ymax = YLower, ymin = Zero), fill = LowerC, alpha = 0.4) +
geom_ribbon(data = Upper, aes(x = XUpper, ymax = YUpper, ymin = Zero), fill = UpperC, alpha = 0.4) +
geom_vline(xintercept = 50, colour = "red", linetype = "longdash") +
annotate("text", x = 25, y = 0.015, label = "-1 SD", colour = LowerC) +
annotate("text", x = 75, y = 0.015, label = "+1 SD", colour = UpperC) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_x_continuous(limits = c(-90, 190), labels = c(-90, -50, 0, 20, 50, 80, 100, 150, 190)) +
xlab("\n Simulated Data") + ylab("Density\n") + ggtitle("Density Plot for Simulated Data with a Standard Deviation of 10\n") +
theme_bw()
# Helpful information from StackExchange discussion
# http://stackoverflow.com/questions/3494593/shading-a-kernel-density-plot-between-two-points?lq=1
# Load zoo package
library(zoo)
# Convert to data frame
Normal30 <- data.frame(Normal30)
# Find density for +/- 1 SD
DensityLower <- density(Normal30$Normal30, from = 20, to = 50)
DensityUpper <- density(Normal30$Normal30, from = 50, to = 80)
# Extract density values (y values)
YLower <- DensityLower$y
YUpper <- DensityUpper$y
# Extract x values
XLower <- DensityLower$x
XUpper <- DensityUpper$x
# Merge vectors into data frames
Lower <- data.frame(YLower, XLower)
Upper <- data.frame(YUpper, XUpper)
# Add zero variable so that the shaded area goes down to 0
Lower$Zero <- 0
Upper$Zero <- 0
# Upper and Lower colours
LowerC <- "#80B2CD"
UpperC <- "#4F6F80"
# Create density plot
ggplot(Normal30, aes(x = Normal30)) +
geom_density() +
geom_ribbon(data = Lower, aes(x = XLower, ymax = YLower, ymin = Zero), fill = LowerC, alpha = 0.4) +
geom_ribbon(data = Upper, aes(x = XUpper, ymax = YUpper, ymin = Zero), fill = UpperC, alpha = 0.4) +
geom_vline(xintercept = 50, colour = "red", linetype = "longdash") +
annotate("text", x = 25, y = 0.015, label = "-1 SD", colour = LowerC) +
annotate("text", x = 75, y = 0.015, label = "+1 SD", colour = UpperC) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_x_continuous(breaks = c(-90, -50, 0, 20, 50, 80, 100, 150, 185), labels = c(-90, -50, 0, 20, 50, 80, 100, 150, 190)) +
xlab("\n Simulated Data") + ylab("Density\n") + ggtitle("Density Plot for Simulated Data with a Standard Deviation of 10\n") +
theme_bw()
# Helpful information from StackExchange discussion
# http://stackoverflow.com/questions/3494593/shading-a-kernel-density-plot-between-two-points?lq=1
# Load zoo package
library(zoo)
# Convert to data frame
Normal30 <- data.frame(Normal30)
# Find density for +/- 1 SD
DensityLower <- density(Normal30$Normal30, from = 20, to = 50)
DensityUpper <- density(Normal30$Normal30, from = 50, to = 80)
# Extract density values (y values)
YLower <- DensityLower$y
YUpper <- DensityUpper$y
# Extract x values
XLower <- DensityLower$x
XUpper <- DensityUpper$x
# Merge vectors into data frames
Lower <- data.frame(YLower, XLower)
Upper <- data.frame(YUpper, XUpper)
# Add zero variable so that the shaded area goes down to 0
Lower$Zero <- 0
Upper$Zero <- 0
# Upper and Lower colours
LowerC <- "#80B2CD"
UpperC <- "#4F6F80"
# Create density plot
ggplot(Normal30, aes(x = Normal30)) +
geom_density() +
geom_ribbon(data = Lower, aes(x = XLower, ymax = YLower, ymin = Zero), fill = LowerC, alpha = 0.4) +
geom_ribbon(data = Upper, aes(x = XUpper, ymax = YUpper, ymin = Zero), fill = UpperC, alpha = 0.4) +
geom_vline(xintercept = 50, colour = "red", linetype = "longdash") +
annotate("text", x = 25, y = 0.015, label = "-1 SD", colour = LowerC) +
annotate("text", x = 75, y = 0.015, label = "+1 SD", colour = UpperC) +
scale_y_continuous(limits = c(0, 0.04)) +
scale_x_continuous(breaks = c(-90, -50, 0, 20, 50, 80, 100, 150, 185), labels = c(-90, -50, 0, 20, 50, 80, 100, 150, 185)) +
xlab("\n Simulated Data") + ylab("Density\n") + ggtitle("Density Plot for Simulated Data with a Standard Deviation of 10\n") +
theme_bw()
